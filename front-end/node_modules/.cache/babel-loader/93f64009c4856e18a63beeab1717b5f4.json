{"ast":null,"code":"import axios from \"axios\";\nimport React, { useState } from \"react\";\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000; // 만료 시간 (24시간 밀리 초로 표현)\n\nconst userData = {\n  email: \"\",\n  password: \"\"\n};\nexport const onLogin = (email, password) => {\n  userData.email = email;\n  userData.password = password;\n  axios.post(\"http://localhost:8080/user/login\", {\n    email: email,\n    password: password\n  }).then(onLoginSuccess).catch(error => {// ... 에러 처리\n  });\n};\nexport const onSilentRefresh = () => {\n  axios.post(\"http://localhost:8080/user/refresh\", {\n    email: userData.email,\n    password: userData.password\n  }).then(onLoginSuccess).catch(error => {// ... 로그인 실패 처리\n  });\n};\n\nconst onLoginSuccess = response => {\n  const {\n    accessToken\n  } = response.data; // accessToken 설정\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // accessToken 만료하기 1분 전에 로그인 연장\n\n  setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n};\n\nexport const logout = () => {\n  axios.post(\"http://localhost:8080/user/logout\").then(res => {\n    userData.email = \"\";\n    userData.password = \"\";\n    axios.defaults.headers.common['Authorization'] = null;\n  }).catch(error => {// ... 로그인 실패 처리\n  });\n};","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/auth/LoginLogic.js"],"names":["axios","React","useState","JWT_EXPIRY_TIME","userData","email","password","onLogin","post","then","onLoginSuccess","catch","error","onSilentRefresh","response","accessToken","data","defaults","headers","common","setTimeout","logout","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,MAAMC,eAAe,GAAG,KAAK,IAAL,GAAY,IAApC,C,CAA0C;;AAE1C,MAAMC,QAAQ,GAAC;AACXC,EAAAA,KAAK,EAAC,EADK;AAEXC,EAAAA,QAAQ,EAAC;AAFE,CAAf;AAKA,OAAO,MAAMC,OAAO,GAAG,CAACF,KAAD,EAAQC,QAAR,KAAqB;AACxCF,EAAAA,QAAQ,CAACC,KAAT,GAAeA,KAAf;AACAD,EAAAA,QAAQ,CAACE,QAAT,GAAkBA,QAAlB;AAEAN,EAAAA,KAAK,CAACQ,IAAN,CAAW,kCAAX,EAA8C;AAC1CH,IAAAA,KAAK,EAACA,KADoC;AAE1CC,IAAAA,QAAQ,EAACA;AAFiC,GAA9C,EAIKG,IAJL,CAIUC,cAJV,EAKKC,KALL,CAKWC,KAAK,IAAI,CACZ;AACH,GAPL;AAQH,CAZM;AAcP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjCb,EAAAA,KAAK,CAACQ,IAAN,CAAW,oCAAX,EAAgD;AAC5CH,IAAAA,KAAK,EAACD,QAAQ,CAACC,KAD6B;AAE5CC,IAAAA,QAAQ,EAACF,QAAQ,CAACE;AAF0B,GAAhD,EAIKG,IAJL,CAIUC,cAJV,EAKKC,KALL,CAKWC,KAAK,IAAI,CACZ;AACH,GAPL;AAQH,CATM;;AAWP,MAAMF,cAAc,GAAGI,QAAQ,IAAI;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,QAAQ,CAACE,IAAjC,CAD+B,CAG/B;;AACAhB,EAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASJ,WAAY,EAAvE,CAJ+B,CAK/B;;AACAK,EAAAA,UAAU,CAACP,eAAD,EAAkBV,eAAe,GAAG,KAApC,CAAV;AACH,CAPD;;AASA,OAAO,MAAMkB,MAAM,GAAG,MAAK;AACvBrB,EAAAA,KAAK,CAACQ,IAAN,CAAW,mCAAX,EACKC,IADL,CACUa,GAAG,IAAE;AACPlB,IAAAA,QAAQ,CAACC,KAAT,GAAe,EAAf;AACAD,IAAAA,QAAQ,CAACE,QAAT,GAAkB,EAAlB;AACAN,IAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,IAAjD;AACH,GALL,EAMKR,KANL,CAMWC,KAAK,IAAI,CACZ;AACH,GARL;AASH,CAVM","sourcesContent":["import axios from \"axios\";\nimport React,{useState} from \"react\";\n\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000; // 만료 시간 (24시간 밀리 초로 표현)\n\nconst userData={\n    email:\"\",\n    password:\"\"\n}\n\nexport const onLogin = (email, password) => {\n    userData.email=email;\n    userData.password=password;\n\n    axios.post(\"http://localhost:8080/user/login\",{\n        email:email,\n        password:password\n    })\n        .then(onLoginSuccess)\n        .catch(error => {\n            // ... 에러 처리\n        });\n}\n\nexport const onSilentRefresh = () => {\n    axios.post(\"http://localhost:8080/user/refresh\",{\n        email:userData.email,\n        password:userData.password\n    })\n        .then(onLoginSuccess)\n        .catch(error => {\n            // ... 로그인 실패 처리\n        });\n}\n\nconst onLoginSuccess = response => {\n    const { accessToken } = response.data;\n\n    // accessToken 설정\n    axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    // accessToken 만료하기 1분 전에 로그인 연장\n    setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n}\n\nexport const logout = () =>{\n    axios.post(\"http://localhost:8080/user/logout\",)\n        .then(res=>{\n            userData.email=\"\"\n            userData.password=\"\";\n            axios.defaults.headers.common['Authorization'] = null;\n        })\n        .catch(error => {\n            // ... 로그인 실패 처리\n        });\n}\n"]},"metadata":{},"sourceType":"module"}