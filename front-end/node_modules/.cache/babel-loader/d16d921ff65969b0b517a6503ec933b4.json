{"ast":null,"code":"import axios from \"axios\";\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000; // 만료 시간 (24시간 밀리 초로 표현)\n\nexport const onLogin = (email, password) => {\n  axios.post(\"http://localhost:8080/user/login\", {\n    email: email,\n    password: password\n  }).then(onLoginSuccess).catch(error => {// ... 에러 처리\n  });\n};\nexport const onSilentRefresh = (email, password) => {\n  axios.post(\"http://localhost:8080/refresh\", {\n    email: email,\n    password: password\n  }).then(onLoginSuccess).catch(error => {// ... 로그인 실패 처리\n  });\n};\n\nconst onLoginSuccess = response => {\n  const {\n    accessToken\n  } = response.data; // accessToken 설정\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; // accessToken 만료하기 1분 전에 로그인 연장\n\n  setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n};","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/auth/LoginLogic.js"],"names":["axios","JWT_EXPIRY_TIME","onLogin","email","password","post","then","onLoginSuccess","catch","error","onSilentRefresh","response","accessToken","data","defaults","headers","common","setTimeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,eAAe,GAAG,KAAK,IAAL,GAAY,IAApC,C,CAA0C;;AAE1C,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCJ,EAAAA,KAAK,CAACK,IAAN,CAAW,kCAAX,EAA8C;AAC1CF,IAAAA,KAAK,EAACA,KADoC;AAE1CC,IAAAA,QAAQ,EAACA;AAFiC,GAA9C,EAIKE,IAJL,CAIUC,cAJV,EAKKC,KALL,CAKWC,KAAK,IAAI,CACZ;AACH,GAPL;AAQH,CATM;AAWP,OAAO,MAAMC,eAAe,GAAG,CAACP,KAAD,EAAQC,QAAR,KAAqB;AAChDJ,EAAAA,KAAK,CAACK,IAAN,CAAW,+BAAX,EAA2C;AACvCF,IAAAA,KAAK,EAACA,KADiC;AAEvCC,IAAAA,QAAQ,EAACA;AAF8B,GAA3C,EAIKE,IAJL,CAIUC,cAJV,EAKKC,KALL,CAKWC,KAAK,IAAI,CACZ;AACH,GAPL;AAQH,CATM;;AAWP,MAAMF,cAAc,GAAGI,QAAQ,IAAI;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,QAAQ,CAACE,IAAjC,CAD+B,CAG/B;;AACAb,EAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASJ,WAAY,EAAvE,CAJ+B,CAK/B;;AACAK,EAAAA,UAAU,CAACP,eAAD,EAAkBT,eAAe,GAAG,KAApC,CAAV;AACH,CAPD","sourcesContent":["import axios from \"axios\";\n\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000; // 만료 시간 (24시간 밀리 초로 표현)\n\nexport const onLogin = (email, password) => {\n    axios.post(\"http://localhost:8080/user/login\",{\n        email:email,\n        password:password\n    })\n        .then(onLoginSuccess)\n        .catch(error => {\n            // ... 에러 처리\n        });\n}\n\nexport const onSilentRefresh = (email, password) => {\n    axios.post(\"http://localhost:8080/refresh\",{\n        email:email,\n        password:password\n    })\n        .then(onLoginSuccess)\n        .catch(error => {\n            // ... 로그인 실패 처리\n        });\n}\n\nconst onLoginSuccess = response => {\n    const { accessToken } = response.data;\n\n    // accessToken 설정\n    axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    // accessToken 만료하기 1분 전에 로그인 연장\n    setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n}\n"]},"metadata":{},"sourceType":"module"}