{"ast":null,"code":"var _jsxFileName = \"/Users/kimheejun/WebstormProjects/boot_react/src/component/map/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao */\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  const {\n    kakao\n  } = window;\n  useEffect(() => {\n    mapscript();\n  }, []);\n\n  const mapscript = () => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options); //위도, 경도로 변환 및 마커표시\n\n    var geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch(String(props.data.address).substring(0, String(props.data.address).lastIndexOf(\"지번\")), function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        var imageSrc = 'images/food_house.png',\n            // 마커이미지의 주소입니다\n        imageSize = new kakao.maps.Size(64, 69),\n            // 마커이미지의 크기입니다\n        imageOption = {\n          offset: new kakao.maps.Point(27, 69)\n        }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n\n        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n            markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x); // 마커가 표시될 위치입니다\n\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: markerPosition,\n          image: markerImage\n        });\n        var infowindow = new kakao.maps.InfoWindow({\n          content: '<div style=\"width:150px;text-align:center;padding:6px 0;color:black;border: none;border: #3B5998 5px solid;font-size: 18px;font-weight: 600\">' + '<span>' + props.data.name + '</span>' + '</div>'\n        });\n        infowindow.open(map, marker);\n        map.setCenter(markerPosition);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/map/Map.js"],"names":["React","useEffect","Map","props","kakao","window","mapscript","container","document","getElementById","options","center","maps","LatLng","level","map","geocoder","services","Geocoder","addressSearch","String","data","address","substring","lastIndexOf","result","status","Status","OK","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","y","x","marker","Marker","position","image","infowindow","InfoWindow","content","name","open","setCenter"],"mappings":"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","sourcesContent":["/*global kakao */\nimport React, { useEffect } from \"react\";\n\nconst Map = (props) => {\n    const { kakao } =window;\n    useEffect(() => {\n        mapscript();\n    }, []);\n    const mapscript = () => {\n        let container = document.getElementById(\"map\");\n        let options = {\n            center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n            level: 3,\n        };\n        const map = new kakao.maps.Map(container, options);\n        //위도, 경도로 변환 및 마커표시\n        var geocoder = new kakao.maps.services.Geocoder();\n        geocoder.addressSearch((String(props.data.address).substring(0,String(props.data.address).lastIndexOf(\"지번\"))), function (result, status) {\n\n            if (status === kakao.maps.services.Status.OK) {\n                var imageSrc = 'images/food_house.png', // 마커이미지의 주소입니다\n                    imageSize = new kakao.maps.Size(64, 69), // 마커이미지의 크기입니다\n                    imageOption = {offset: new kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n                // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n                var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n                    markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x); // 마커가 표시될 위치입니다\n\n                var marker = new kakao.maps.Marker({\n                    map: map,\n                    position: markerPosition,\n                    image:markerImage\n                });\n                var infowindow = new kakao.maps.InfoWindow({\n                    content: '<div style=\"width:150px;text-align:center;padding:6px 0;color:black;border: none;border: #3B5998 5px solid;font-size: 18px;font-weight: 600\">'+\n                                '<span>'+props.data.name+'</span>'+\n                            '</div>'\n                });\n                infowindow.open(map, marker);\n\n                map.setCenter(markerPosition);\n            }\n        });\n    }\n    return(\n        <div id=\"map\" style={{\"width\": \"100%\", \"height\": \"400px\"}}></div>\n    )\n}\nexport default Map\n"]},"metadata":{},"sourceType":"module"}