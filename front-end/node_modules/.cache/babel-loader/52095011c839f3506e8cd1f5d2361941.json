{"ast":null,"code":"import axios from \"axios\";\nimport React from \"react\";\nimport App from '../../App';\nimport app from \"../../App\";\nimport { getCookie, setCookie } from \"../util/Cookie\";\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000; // 만료 시간 (24시간 밀리 초로 표현)\n\nexport const onLogin = (email, password) => {\n  axios.post(\"http://localhost:8080/user/login\", {\n    email: email,\n    password: password\n  }).then(res => {\n    console.log(\"로그인 성공\");\n    onLoginSuccess(res);\n  }).catch(error => {\n    console.log(\"로그인 실패\");\n  });\n};\nexport const onSilentRefresh = () => {\n  console.log(\"refresh\");\n  axios.post(\"http://localhost:8080/user/refresh\").then(res => {\n    onLoginSuccess(res);\n  }).catch(error => {\n    console.log(\"refresh실패\");\n  });\n};\n\nconst onLoginSuccess = response => {\n  console.log(response); // setCookie('accessToken',response.data.accessToken);\n  // accessToken 설정\n  // axios.interceptors 를 이용해도 됨\n  // axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.accessToken}`;\n  // accessToken 만료하기 1분 전에 로그인 연장\n\n  setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n  sessionStorage.setItem(\"isLogin\", \"login\");\n};\n\nexport const logout = () => {\n  axios.post(\"http://localhost:8080/user/logout\").then(res => {\n    sessionStorage.removeItem(\"isLogin\");\n    console.log(\"로그아웃 성공\");\n    document.location.href = \"/\";\n  }).catch(error => {\n    console.log(\"로그아웃 실패\");\n  });\n};","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/auth/LoginLogic.js"],"names":["axios","React","App","app","getCookie","setCookie","JWT_EXPIRY_TIME","onLogin","email","password","post","then","res","console","log","onLoginSuccess","catch","error","onSilentRefresh","response","setTimeout","sessionStorage","setItem","logout","removeItem","document","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,gBAAnC;AACA,MAAMC,eAAe,GAAG,KAAK,IAAL,GAAY,IAApC,C,CAA0C;;AAE1C,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAExCT,EAAAA,KAAK,CAACU,IAAN,CAAW,kCAAX,EAA8C;AAC1CF,IAAAA,KAAK,EAACA,KADoC;AAE1CC,IAAAA,QAAQ,EAACA;AAFiC,GAA9C,EAIKE,IAJL,CAIUC,GAAG,IAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,IAAAA,cAAc,CAACH,GAAD,CAAd;AACH,GAPL,EAOOI,KAPP,CAOaC,KAAK,IAAE;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GATL;AAUH,CAZM;AAcP,OAAO,MAAMI,eAAe,GAAG,MAAM;AACjCL,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAd,EAAAA,KAAK,CAACU,IAAN,CAAW,oCAAX,EAEKC,IAFL,CAEUC,GAAG,IAAE;AACPG,IAAAA,cAAc,CAACH,GAAD,CAAd;AACH,GAJL,EAKKI,KALL,CAKWC,KAAK,IAAI;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAPL;AAQH,CAVM;;AAYP,MAAMC,cAAc,GAAII,QAAD,IAAc;AACjCN,EAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ,EADiC,CAEjC;AACA;AACA;AACA;AACA;;AACAC,EAAAA,UAAU,CAACF,eAAD,EAAkBZ,eAAe,GAAG,KAApC,CAAV;AACAe,EAAAA,cAAc,CAACC,OAAf,CAAuB,SAAvB,EAAiC,OAAjC;AACH,CATD;;AAWA,OAAO,MAAMC,MAAM,GAAG,MAAK;AACvBvB,EAAAA,KAAK,CAACU,IAAN,CAAW,mCAAX,EACKC,IADL,CACUC,GAAG,IAAE;AACPS,IAAAA,cAAc,CAACG,UAAf,CAA0B,SAA1B;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAW,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAuB,GAAvB;AACH,GALL,EAMKX,KANL,CAMWC,KAAK,IAAI;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GARL;AASH,CAVM","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport App from '../../App'\nimport app from \"../../App\";\nimport {getCookie, setCookie} from \"../util/Cookie\";\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000; // 만료 시간 (24시간 밀리 초로 표현)\n\nexport const onLogin = (email, password) => {\n\n    axios.post(\"http://localhost:8080/user/login\",{\n        email:email,\n        password:password\n    })\n        .then(res =>{\n            console.log(\"로그인 성공\")\n            onLoginSuccess(res)\n        }).catch(error=>{\n            console.log(\"로그인 실패\")\n        })\n}\n\nexport const onSilentRefresh = () => {\n    console.log(\"refresh\")\n    axios.post(\"http://localhost:8080/user/refresh\",\n    )\n        .then(res=>{\n            onLoginSuccess(res)\n        })\n        .catch(error => {\n            console.log(\"refresh실패\")\n        });\n}\n\nconst onLoginSuccess = (response) => {\n    console.log(response)\n    // setCookie('accessToken',response.data.accessToken);\n    // accessToken 설정\n    // axios.interceptors 를 이용해도 됨\n    // axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.accessToken}`;\n    // accessToken 만료하기 1분 전에 로그인 연장\n    setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n    sessionStorage.setItem(\"isLogin\",\"login\")\n}\n\nexport const logout = () =>{\n    axios.post(\"http://localhost:8080/user/logout\",)\n        .then(res=>{\n            sessionStorage.removeItem(\"isLogin\")\n            console.log(\"로그아웃 성공\")\n            document.location.href=\"/\"\n        })\n        .catch(error => {\n            console.log(\"로그아웃 실패\")\n        });\n}\n"]},"metadata":{},"sourceType":"module"}