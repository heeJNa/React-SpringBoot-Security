{"ast":null,"code":"var _jsxFileName = \"/Users/kimheejun/WebstormProjects/boot_react/src/component/food/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport \"./Menu.css\";\nimport RestaurantIcon from '@mui/icons-material/Restaurant';\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [pages, setPages] = useState({\n    curpage: 1,\n    totalpage: 0,\n    count: 0,\n    startPage: 1,\n    endPage: 5\n  });\n  const [food, setFood] = useState([]);\n  const [type, setType] = useState('이탈리안');\n  const [types, setTypes] = useState([]); // type이 변경시 작동 / 처음 실행시 작동\n\n  useEffect(() => {\n    {\n      getFoodList();\n    }\n  }, [type, pages.curpage]); // foodlist 받아오기\n\n  const getFoodList = () => {\n    axios.get(\"http://localhost:8080/food/menu\", {\n      params: {\n        page: pages.curpage,\n        type: type\n      }\n    }).then(res => {\n      console.log(res.data);\n      setFood(res.data);\n      setPages(prevState => {\n        return { ...prevState,\n          totalpage: res.data[0].totalpage,\n          count: res.data[0].count,\n          startPage: res.data[0].startPage,\n          endPage: res.data[0].endPage\n        };\n      });\n    });\n  }; // typeList 받아오기\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/food/typelist\").then(res => {\n      console.log(res.data);\n      setTypes(res.data);\n    });\n  }, []); // type 버튼 클릭시 변경\n\n  const typeChange = type => {\n    setType(type.t);\n    setPages(prevState => {\n      return {\n        curpage: 1\n      };\n    });\n  }; // pagenation 구현\n\n\n  const pagenation = () => {\n    let tmp = [];\n\n    for (let i = pages.startPage; i <= pages.endPage; i++) {\n      tmp.push(i);\n    } // 페이지 이동\n\n\n    const changePage = p => {\n      console.log(p);\n      setPages(prevState => {\n        return { ...prevState,\n          curpage: p\n        };\n      });\n    }; // pageList 출력\n\n\n    let pageMap = tmp.map((i, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: i === pages.curpage ? 'page-item active' : 'page-item',\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-link\",\n        onClick: () => {\n          changePage(i);\n        },\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"margin\": \"0px auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"...\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: pages.startPage > 1 ? 'page-item' : 'page-item disabled',\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-link\",\n              onClick: () => {\n                changePage(pages.startPage - 1);\n              },\n              tabIndex: \"-1\",\n              \"aria-disabled\": \"true\",\n              children: \"\\uC774\\uC804\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this), pageMap, /*#__PURE__*/_jsxDEV(\"li\", {\n            className: pages.endPage >= pages.totalpage ? 'page-item disabled' : 'page-item',\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-link\",\n              onClick: () => {\n                changePage(pages.endPage + 1);\n              },\n              children: \"\\uB2E4\\uC74C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this);\n  }; // foodlist 반복 출력 구현\n\n\n  const fmap = food.map((f, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumbnail\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/food/detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: f.poster.substring(0, f.poster.indexOf(\"^\")),\n          title: f.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caption\",\n          children: /*#__PURE__*/_jsxDEV(\"dl\", {\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              children: \"\\uC2DD\\uB2F9\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              children: f.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n              children: \"\\uC8FC\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              children: f.address.substring(0, f.address.lastIndexOf(\"지번\"))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this)); // typelist 반복 출력 구현\n\n  const typeMap = types.map((t, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: type === t ? 'tag-food tag-active' : 'tag-food',\n    onClick: () => typeChange({\n      t\n    }),\n    children: t\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this)); // render\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Menu List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag-wrap\",\n          children: typeMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"menu_title\",\n          children: [/*#__PURE__*/_jsxDEV(RestaurantIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 50\n          }, this), \"\\xA0\\uBA54\\uB274\\uBCC4 \\uB9DB\\uC9D1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"countInfo\",\n          children: [\"\\uCD1D \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: pages.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 53\n          }, this), \"\\uAC1C\\uC758 \\uB9DB\\uC9D1\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: fmap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pagenation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"6YzcWW3ZfKdVlOV/fnCaOxZNT+M=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/food/Menu.js"],"names":["React","useState","useEffect","Fragment","axios","RestaurantIcon","Link","$","Menu","page","setPage","total","setTotal","pages","setPages","curpage","totalpage","count","startPage","endPage","food","setFood","type","setType","types","setTypes","getFoodList","get","params","then","res","console","log","data","prevState","typeChange","t","pagenation","tmp","i","push","changePage","p","pageMap","map","index","fmap","f","poster","substring","indexOf","name","address","lastIndexOf","typeMap"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Fragment} from \"react\";\nimport axios from \"axios\";\nimport \"./Menu.css\"\nimport RestaurantIcon from '@mui/icons-material/Restaurant';\nimport {Link} from \"react-router-dom\";\nimport $ from \"jquery\"\n\n\nconst Menu = () => {\n    const [page,setPage] = useState(1);\n    const [total,setTotal] = useState(0)\n    const [pages,setPages] = useState({curpage:1, totalpage:0,count:0,startPage:1,endPage:5})\n    const [food,setFood] = useState([]);\n    const [type,setType] = useState('이탈리안');\n    const [types,setTypes] = useState([]);\n\n    // type이 변경시 작동 / 처음 실행시 작동\n    useEffect(()=>{\n        {getFoodList()}\n    },[type,pages.curpage])\n\n    // foodlist 받아오기\n    const getFoodList = () => {\n        axios.get(\"http://localhost:8080/food/menu\",{\n            params:{\n                page:pages.curpage,\n                type:type\n            }\n        }).then(res=>{\n            console.log(res.data)\n            setFood(res.data)\n            setPages((prevState) => {\n                return{\n                    ...prevState,\n                    totalpage: res.data[0].totalpage,\n                    count : res.data[0].count,\n                    startPage: res.data[0].startPage,\n                    endPage: res.data[0].endPage\n                }\n            })\n        })\n    }\n    // typeList 받아오기\n    useEffect(()=>{\n        axios.get(\"http://localhost:8080/food/typelist\")\n            .then(res=>{\n                console.log(res.data)\n                setTypes(res.data)\n            })\n    },[])\n    // type 버튼 클릭시 변경\n    const typeChange = (type) => {\n      setType(type.t);\n      setPages(prevState => {\n          return{\n              curpage: 1\n          }\n      })\n    }\n    // pagenation 구현\n    const pagenation = () => {\n      let tmp = [] ;\n      for(let i = pages.startPage;i<=pages.endPage;i++) {\n          tmp.push(i);\n      }\n      // 페이지 이동\n      const changePage =  (p) => {\n          console.log(p)\n           setPages( prevState =>{\n                return {\n                    ...prevState,\n                    curpage: p\n                }\n           })\n      }\n     // pageList 출력\n      let pageMap = tmp.map((i,index)=>(\n          <li key={index} className={i===pages.curpage?'page-item active':'page-item'}>\n              <span className=\"page-link\" onClick={()=>{changePage(i)}}>{i}</span>\n          </li>\n      ))\n      return(\n          <div style={{\"margin\":\"0px auto\"}}>\n              <nav aria-label=\"...\">\n                  <ul className=\"pagination\">\n                      <li className={pages.startPage>1?'page-item':'page-item disabled'}>\n                          <span className=\"page-link\" onClick={()=>{changePage(pages.startPage-1)}} tabIndex=\"-1\" aria-disabled=\"true\">이전</span>\n                      </li>\n                      {pageMap}\n                      <li className={pages.endPage>=pages.totalpage?'page-item disabled':'page-item'}>\n                          <span className=\"page-link\" onClick={()=>{changePage(pages.endPage+1)}}>다음</span>\n                      </li>\n                  </ul>\n              </nav>\n          </div>\n      )\n    }\n    // foodlist 반복 출력 구현\n    const fmap = food.map((f,index) => (\n        <div key={index} className={\"col-md-4\"}>\n            <div className=\"thumbnail\">\n                <Link to=\"/food/detail\">\n                    <img src={f.poster.substring(0,f.poster.indexOf(\"^\"))} title={f.name} />\n                    <div className=\"caption\">\n                        <dl>\n                            <dt>식당명</dt>\n                            <dd>{f.name}</dd>\n                            <dt>주소</dt>\n                            <dd>\n                                {f.address.substring(0,f.address.lastIndexOf(\"지번\"))}\n                            </dd>\n                        </dl>\n                    </div>\n                </Link>\n            </div>\n        </div>\n    ))\n    // typelist 반복 출력 구현\n    const typeMap = types.map((t,index)=>(\n        <button key={index} className={type===t?'tag-food tag-active':'tag-food'} onClick={()=>typeChange({t})}>{t}</button>\n    ))\n    // render\n    return(\n        <Fragment>\n            <div className={\"menu-wrap\"}>\n                <div className={\"row\"}>\n                    <h1>Menu List</h1>\n                    <div className={\"tag-wrap\"}>\n                        {typeMap}\n                    </div>\n                </div>\n                <div className={\"row\"}>\n                    <h1 className={\"menu_title\"}><RestaurantIcon fontSize={\"large\"}/>&nbsp;메뉴별 맛집</h1>\n                    <span className={\"countInfo\"}>총 <em>{pages.count}</em>개의 맛집이 있습니다.</span>\n                </div>\n                <div className={\"row\"}>\n                    {fmap}\n                </div>\n                <div>\n                    {pagenation()}\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}