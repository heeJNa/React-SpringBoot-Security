{"ast":null,"code":"var _jsxFileName = \"/Users/kimheejun/WebstormProjects/boot_react/src/component/map/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao */\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  useEffect(() => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n      level: 3\n    };\n    let map = new kakao.maps.Map(container, options); //위도, 경도로 변환 및 마커표시\n\n    let geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch(props.addr.mapAddr, function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        let imageSrc = 'https://cdn0.iconfinder.com/data/icons/city-elements-filledoutline-1/64/cafe-food_and_restaurant-commerce_and_shopping-architecture_and_city-coffee_shop-store-buildings-1024.png',\n            // 마커이미지의 주소입니다\n        imageSize = new kakao.maps.Size(34, 39),\n            // 마커이미지의 크기입니다\n        imageOption = {\n          offset: new kakao.maps.Point(20, 20)\n        }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n\n        let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n            markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x); // 마커가 표시될 위치입니다\n\n        let marker = new kakao.maps.Marker({\n          map: map,\n          position: markerPosition,\n          image: markerImage\n        });\n        let infowindow = new kakao.maps.InfoWindow({\n          content: '<div style=\"width:150px;text-align:center;padding:6px 0;color:black;border: none;border: #3B5998 5px solid;font-size: 18px;font-weight: 600\">' + '<span>' + props.data.name + '</span>' + '</div>'\n        });\n        infowindow.open(map, marker);\n        map.setCenter(markerPosition);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/map/Map.js"],"names":["React","useEffect","Map","props","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","geocoder","services","Geocoder","addressSearch","addr","mapAddr","result","status","Status","OK","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","y","x","marker","Marker","position","image","infowindow","InfoWindow","content","data","name","open","setCenter"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACnBF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAhB;AACA,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,kBAAtB,EAA0C,kBAA1C,CADE;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAIA,QAAIC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWR,GAAf,CAAmBE,SAAnB,EAA8BG,OAA9B,CAAV,CANY,CAOZ;;AACA,QAAIO,QAAQ,GAAG,IAAIL,KAAK,CAACC,IAAN,CAAWK,QAAX,CAAoBC,QAAxB,EAAf;AACAF,IAAAA,QAAQ,CAACG,aAAT,CAAuBd,KAAK,CAACe,IAAN,CAAWC,OAAlC,EAA2C,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AAEjE,UAAIA,MAAM,KAAKZ,KAAK,CAACC,IAAN,CAAWK,QAAX,CAAoBO,MAApB,CAA2BC,EAA1C,EAA8C;AAC1C,YAAIC,QAAQ,GAAG,mLAAf;AAAA,YAAoM;AAChMC,QAAAA,SAAS,GAAG,IAAIhB,KAAK,CAACC,IAAN,CAAWgB,IAAf,CAAoB,EAApB,EAAwB,EAAxB,CADhB;AAAA,YAC6C;AACzCC,QAAAA,WAAW,GAAG;AAACC,UAAAA,MAAM,EAAE,IAAInB,KAAK,CAACC,IAAN,CAAWmB,KAAf,CAAqB,EAArB,EAAyB,EAAzB;AAAT,SAFlB,CAD0C,CAGgB;AAE1D;;AACA,YAAIC,WAAW,GAAG,IAAIrB,KAAK,CAACC,IAAN,CAAWqB,WAAf,CAA2BP,QAA3B,EAAqCC,SAArC,EAAgDE,WAAhD,CAAlB;AAAA,YACIK,cAAc,GAAG,IAAIvB,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBS,MAAM,CAAC,CAAD,CAAN,CAAUa,CAAhC,EAAmCb,MAAM,CAAC,CAAD,CAAN,CAAUc,CAA7C,CADrB,CAN0C,CAO4B;;AAEtE,YAAIC,MAAM,GAAG,IAAI1B,KAAK,CAACC,IAAN,CAAW0B,MAAf,CAAsB;AAC/BvB,UAAAA,GAAG,EAAEA,GAD0B;AAE/BwB,UAAAA,QAAQ,EAAEL,cAFqB;AAG/BM,UAAAA,KAAK,EAACR;AAHyB,SAAtB,CAAb;AAKA,YAAIS,UAAU,GAAG,IAAI9B,KAAK,CAACC,IAAN,CAAW8B,UAAf,CAA0B;AACvCC,UAAAA,OAAO,EAAE,kJACL,QADK,GACItC,KAAK,CAACuC,IAAN,CAAWC,IADf,GACoB,SADpB,GAEL;AAHmC,SAA1B,CAAjB;AAKAJ,QAAAA,UAAU,CAACK,IAAX,CAAgB/B,GAAhB,EAAqBsB,MAArB;AAEAtB,QAAAA,GAAG,CAACgC,SAAJ,CAAcb,cAAd;AACH;AACJ,KAzBD;AA2BH,GApCQ,EAoCN,EApCM,CAAT;AAqCA,sBACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAAC,eAAS,MAAV;AAAkB,gBAAU;AAA5B;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAzCD;;GAAM9B,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["/*global kakao */\nimport React, { useEffect } from \"react\";\n\nconst Map = (props) => {\n    useEffect(() => {\n        let container = document.getElementById(\"map\");\n        let options = {\n            center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n            level: 3,\n        };\n        let map = new kakao.maps.Map(container, options);\n        //위도, 경도로 변환 및 마커표시\n        let geocoder = new kakao.maps.services.Geocoder();\n        geocoder.addressSearch(props.addr.mapAddr, function (result, status) {\n\n            if (status === kakao.maps.services.Status.OK) {\n                let imageSrc = 'https://cdn0.iconfinder.com/data/icons/city-elements-filledoutline-1/64/cafe-food_and_restaurant-commerce_and_shopping-architecture_and_city-coffee_shop-store-buildings-1024.png', // 마커이미지의 주소입니다\n                    imageSize = new kakao.maps.Size(34, 39), // 마커이미지의 크기입니다\n                    imageOption = {offset: new kakao.maps.Point(20, 20)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n                // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n                let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n                    markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x); // 마커가 표시될 위치입니다\n\n                let marker = new kakao.maps.Marker({\n                    map: map,\n                    position: markerPosition,\n                    image:markerImage\n                });\n                let infowindow = new kakao.maps.InfoWindow({\n                    content: '<div style=\"width:150px;text-align:center;padding:6px 0;color:black;border: none;border: #3B5998 5px solid;font-size: 18px;font-weight: 600\">'+\n                        '<span>'+props.data.name+'</span>'+\n                        '</div>'\n                });\n                infowindow.open(map, marker);\n\n                map.setCenter(markerPosition);\n            }\n        });\n\n    }, []);\n    return(\n        <div id=\"map\" style={{\"width\": \"100%\", \"height\": \"400px\"}}></div>\n    )\n}\nexport default Map\n"]},"metadata":{},"sourceType":"module"}