{"ast":null,"code":"var _jsxFileName = \"/Users/kimheejun/WebstormProjects/boot_react/src/component/map/Map.js\",\n    _s = $RefreshSig$();\n\n/*global kakao */\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://dapi.kakao.com/v2/maps/sdk.js?appkey=cf294808f0d9b3189496901cb031c3bc&libraries=services&autoload=false\";\n    document.head.appendChild(script);\n\n    script.onload = () => {\n      kakao.maps.load(() => {\n        let container = document.getElementById(\"map\");\n        let options = {\n          center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n          level: 3\n        };\n        console.log(props.addr.mapAddr);\n        let map = new kakao.maps.Map(container, options); //위도, 경도로 변환 및 마커표시\n\n        let geocoder = new kakao.maps.services.Geocoder();\n        geocoder.addressSearch(props.addr.mapAddr, function (result, status) {\n          if (status === kakao.maps.services.Status.OK) {\n            let imageSrc = 'https://cdn0.iconfinder.com/data/icons/city-elements-filledoutline-1/64/cafe-food_and_restaurant-commerce_and_shopping-architecture_and_city-coffee_shop-store-buildings-1024.png',\n                // 마커이미지의 주소입니다\n            imageSize = new kakao.maps.Size(34, 39),\n                // 마커이미지의 크기입니다\n            imageOption = {\n              offset: new kakao.maps.Point(20, 20)\n            }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n            // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n\n            let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n                markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x); // 마커가 표시될 위치입니다\n\n            let marker = new kakao.maps.Marker({\n              map: map,\n              position: markerPosition,\n              image: markerImage\n            });\n            let infowindow = new kakao.maps.InfoWindow({\n              content: '<div style=\"width:150px;text-align:center;padding:6px 0;color:black;border: none;border: #3B5998 5px solid;font-size: 18px;font-weight: 600\">' + '<span>' + props.data.name + '</span>' + '</div>'\n            });\n            infowindow.open(map, marker);\n            map.setCenter(markerPosition);\n          }\n        });\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/map/Map.js"],"names":["React","useEffect","Map","props","script","document","createElement","async","src","head","appendChild","onload","kakao","maps","load","container","getElementById","options","center","LatLng","level","console","log","addr","mapAddr","map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","markerPosition","y","x","marker","Marker","position","image","infowindow","InfoWindow","content","data","name","open","setCenter"],"mappings":"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","sourcesContent":["/*global kakao */\nimport React, { useEffect } from \"react\";\n\nconst Map = (props) => {\n    useEffect(() => {\n        const script=document.createElement(\"script\")\n        script.async=true;\n        script.src=\"https://dapi.kakao.com/v2/maps/sdk.js?appkey=cf294808f0d9b3189496901cb031c3bc&libraries=services&autoload=false\"\n        document.head.appendChild(script)\n        script.onload=()=>{\n            kakao.maps.load(()=>{\n                let container = document.getElementById(\"map\");\n                let options = {\n                    center: new kakao.maps.LatLng(37.624915253753194, 127.15122688059974),\n                    level: 3,\n                };\n                console.log(props.addr.mapAddr)\n                let map = new kakao.maps.Map(container, options);\n                //위도, 경도로 변환 및 마커표시\n                let geocoder = new kakao.maps.services.Geocoder();\n                geocoder.addressSearch(props.addr.mapAddr, function (result, status) {\n\n                    if (status === kakao.maps.services.Status.OK) {\n                        let imageSrc = 'https://cdn0.iconfinder.com/data/icons/city-elements-filledoutline-1/64/cafe-food_and_restaurant-commerce_and_shopping-architecture_and_city-coffee_shop-store-buildings-1024.png', // 마커이미지의 주소입니다\n                            imageSize = new kakao.maps.Size(34, 39), // 마커이미지의 크기입니다\n                            imageOption = {offset: new kakao.maps.Point(20, 20)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n                        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n                        let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n                            markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x); // 마커가 표시될 위치입니다\n\n                        let marker = new kakao.maps.Marker({\n                            map: map,\n                            position: markerPosition,\n                            image:markerImage\n                        });\n                        let infowindow = new kakao.maps.InfoWindow({\n                            content: '<div style=\"width:150px;text-align:center;padding:6px 0;color:black;border: none;border: #3B5998 5px solid;font-size: 18px;font-weight: 600\">'+\n                                '<span>'+props.data.name+'</span>'+\n                                '</div>'\n                        });\n                        infowindow.open(map, marker);\n\n                        map.setCenter(markerPosition);\n                    }\n                });\n            })\n        }\n    }, []);\n    return(\n        <div id=\"map\" style={{\"width\": \"100%\", \"height\": \"400px\"}}></div>\n    )\n}\nexport default Map\n"]},"metadata":{},"sourceType":"module"}