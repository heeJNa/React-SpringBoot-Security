{"ast":null,"code":"var _jsxFileName = \"/Users/kimheejun/WebstormProjects/boot_react/src/component/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"@mui/material\";\nimport './login.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [Email, SetEmail] = useState(\"\");\n  const [Password, SetPassword] = useState(\"\");\n\n  const emailHandler = e => {\n    e.preventDefault();\n    SetEmail(e.target.value);\n  };\n\n  const passwordHandler = e => {\n    e.preventDefault();\n    SetPassword(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); // state에 저장한 값을 가져옵니다.\n\n    console.log(Email);\n    console.log(Password);\n    axios.post(\"http://localhost:8080/user/login\", {\n      email: Email,\n      password: Password\n    }).then(res => {\n      const {\n        accessToken\n      } = res.data.accessToken;\n      console.log(res);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      alert('로그인 되었습니다.');\n      window.location.href = \"/\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        onChange: emailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: passwordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicCheckbox\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Check me out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"login-btn\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"RXEqT1Jh7m+icyxjlR1zkzhkI0A=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kimheejun/WebstormProjects/boot_react/src/component/auth/Login.js"],"names":["React","useState","Form","Button","axios","Login","Email","SetEmail","Password","SetPassword","emailHandler","e","preventDefault","target","value","passwordHandler","submitHandler","console","log","post","email","password","then","res","accessToken","data","defaults","headers","common","alert","window","location","href"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport {Form} from \"react-bootstrap\";\nimport {Button} from \"@mui/material\";\nimport './login.css'\nimport axios from \"axios\";\n\nconst Login = () => {\n    const [Email, SetEmail] = useState(\"\");\n    const [Password, SetPassword] = useState(\"\");\n\n\n    const emailHandler = (e) => {\n        e.preventDefault();\n        SetEmail(e.target.value);\n    };\n\n    const passwordHandler = (e) => {\n        e.preventDefault();\n        SetPassword(e.target.value);\n    };\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // state에 저장한 값을 가져옵니다.\n        console.log(Email);\n        console.log(Password);\n\n\n        axios.post(\"http://localhost:8080/user/login\",{\n            email:Email,\n            password:Password\n        })\n            .then((res) => {\n                const { accessToken } = res.data.accessToken;\n                console.log(res)\n                axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n                alert('로그인 되었습니다.')\n                window.location.href=\"/\"\n            });\n    }\n    return (\n            <Form onSubmit={submitHandler}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={emailHandler}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordHandler}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                <Button type=\"submit\" className={\"login-btn\"}>Login</Button>\n            </Form>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}